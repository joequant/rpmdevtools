#!/usr/bin/python
#
# Seth Vidal - yadda yadda yadda GPL Yadda yadda yadda Use at own risk

import rpm
import sys

have_miscutils = 0
try:
    from rpmUtils.miscutils import stringToVersion
    have_miscutils = 1
except:
    pass

def usage():
    print """
rpmdev-vercmp <epoch1> <ver1> <release1> <epoch2> <ver2> <release2>
rpmdev-vercmp <EVR1> <EVR2> # if rpmUtils.miscutils is available
rpmdev-vercmp # with no arguments, prompt
"""

def vercmp((e1, v1, r1), (e2, v2, r2)):
   rc = rpm.labelCompare((e1, v1, r1), (e2, v2, r2))
   return rc


def askforstuff(thingname):
    thing = raw_input('%s :' % thingname)
    return thing

def main():
    if len(sys.argv) > 1 and sys.argv[1] in ['-h', '--help', '-help', '--usage']:
        usage()
        sys.exit(0)
    elif len(sys.argv) == 3:
        if have_miscutils:
            (e1, v1, r1) = stringToVersion(sys.argv[1])
            (e2, v2, r2) = stringToVersion(sys.argv[2])
            # stringToVersion in yum < 3.1.2 may return numeric (non-string)
            # Epochs, and labelCompare does not like that.
            if e1 is not None: e1 = str(e1)
            if e2 is not None: e2 = str(e2)
        else:
            print """
Sorry, the 2-argument form is available only if rpmUtils.miscutils (which
ships eg. with yum) is available."""
            usage()
            sys.exit(1)
    elif len(sys.argv) < 7:
        e1 = askforstuff('Epoch1')
        v1 = askforstuff('Version1')
        r1 = askforstuff('Release1')        
        e2 = askforstuff('Epoch2')
        v2 = askforstuff('Version2')
        r2 = askforstuff('Release2')
    else:
        (e1, v1, r1, e2, v2, r2) = sys.argv[1:]
    
    rc = vercmp((e1, v1, r1), (e2, v2, r2))
    if rc > 0:
        print "%s:%s-%s is newer" % (e1, v1, r1)
    elif rc == 0:
        print "These are equal"
    elif rc < 0:
        print "%s:%s-%s is newer" % (e2, v2, r2)

if __name__ == "__main__":
    main()
